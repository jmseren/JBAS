0 REM Mastermind
1 REM AUTHOR: JMSER
2 REM JBasic 1.3 GUI Mode

10 REM SUBROUTINE DEFINITIONS (Start at line 2000, separated by multiples of 50)
11 LET draw_board = 2000
12 LET draw_peg = 2100
13 LET color_to_int = 2250
14 LET check_guess = 2450
15 LET draw_correct = 2900
16 LET game_won = 3000
17 LET game_lost = 3200
18 LET valid_color = 3150


100 REM VARIABLE DEFINITIONS
101 DIM colors 6
102 LET colors[0] = "r"
103 LET colors[1] = "o"
104 LET colors[2] = "y"
105 LET colors[3] = "g"
106 LET colors[4] = "b"
107 LET colors[5] = "p"
108 DIM code 4
109 DIM color 5


200 REM PROGRAM START
210 PRINT "Welcome to Mastermind!"
220 PRINT "The computer will generate a code of 4 colors."
230 PRINT "You will have 10 tries to guess the code."
240 PRINT "The computer will tell you how many colors you guessed correctly."
250 PRINT "You will also be told how many of those colors are in the correct position."
260 PRINT "Good luck!"
270 PRINT ""
270 PRINT "Press enter to continue."
280 INPUT _
290 LET code[0] = colors[rnd(6)]
300 LET code[1] = colors[rnd(6)]
310 LET code[2] = colors[rnd(6)]
320 LET code[3] = colors[rnd(6)]
325 LET tries = 0
330 CLS
340 GOSUB draw_board
350 PRINT "Guess color 1!"
360 PRINT "(r)ed, (o)range, (y)ellow," 
370 PRINT "(g)reen, (b)lue, (p)urple"
380 PRINT ""
390 INPUT color[1]
391 LET valid = color[1]
392 GOSUB valid_color
393 IF valid == 0
394 GOTO 350
400 LET x = 63
410 LET y = 4 * tries
420 LET color = color[1]
430 GOSUB color_to_int
440 LET color = color_int
450 GOSUB draw_peg
460 PRINT "Guess color 2!"
470 PRINT "(r)ed, (o)range, (y)ellow,"
480 PRINT "(g)reen, (b)lue, (p)urple"
490 PRINT ""
500 INPUT color[2]
501 LET valid = color[2]
502 GOSUB valid_color
503 IF valid == 0
504 GOTO 460
510 LET x = 67
520 LET y = 4 * tries
530 LET color = color[2]
540 GOSUB color_to_int
550 LET color = color_int
560 GOSUB draw_peg
570 PRINT "Guess color 3!"
580 PRINT "(r)ed, (o)range, (y)ellow,"
590 PRINT "(g)reen, (b)lue, (p)urple"
600 PRINT ""
610 INPUT color[3]
611 LET valid = color[3]
612 GOSUB valid_color
613 IF valid == 0
614 GOTO 570
620 LET x = 71
630 LET y = 4 * tries
640 LET color = color[3]
650 GOSUB color_to_int
660 LET color = color_int
670 GOSUB draw_peg
680 PRINT "Guess color 4!"
690 PRINT "(r)ed, (o)range, (y)ellow,"
700 PRINT "(g)reen, (b)lue, (p)urple"
710 PRINT ""
720 INPUT color[4]
721 LET valid = color[4]
722 GOSUB valid_color
723 IF valid == 0
724 GOTO 680
730 LET x = 75
740 LET y = 4 * tries
750 LET color = color[4]
760 GOSUB color_to_int
770 LET color = color_int
780 GOSUB draw_peg
790 GOSUB check_guess
800 PRINT "Correct colors: " + correct
810 PRINT "Correct positions: " + correct_pos
820 LET x = 55
830 LET y = 4 * tries
840 LET colored = 0
850 IF correct > 0
860 GOSUB draw_correct
870 LET correct = correct - 1
880 LET x = x + 1
890 IF x > 56
900 LET y = y + 1
910 IF x > 56
920 LET x = 55
930 IF correct > 0
940 GOTO 860
945 LET colored = 1
950 IF correct_pos > 0
960 GOSUB draw_correct
970 LET correct_pos = correct_pos - 1
980 LET x = x + 1
990 IF x > 56
1000 LET y = y + 1
1010 IF x > 56
1020 LET x = 55
1030 IF correct_pos > 0
1040 GOTO 960
1050 LET tries = tries + 1
1060 IF tries < 10
1070 GOTO 350
1080 GOSUB game_lost






1998 GOTO last
1999 REM FUNCTION DEFINITIONS

2000 REM draw_board
2010 LET x = 60
2020 LET y = 0
2030 POKE (x + (y * 80)), 1
2040 LET y = y + 1
2050 IF y < 50
2060 GOTO 2030
2070 RETURN

2100 REM draw_peg
2110 REM ARGS 1: x, 2: y, 3: color
2120 REM PEG SIZE: 4x4
2130 LET cap = (y+4)
2140 POKE (x + (y * 80)), color
2150 POKE ((x + 1) + (y * 80)), color
2160 POKE ((x + 2) + (y * 80)), color
2170 POKE ((x + 3) + (y * 80)), color
2180 LET y = y + 1
2190 IF y < cap
2200 GOTO 2140
2210 RETURN

2250 REM color_to_int
2260 REM ARGS 1: color, RETURNS: color_int
2270 LET color_int = 0
2280 IF color == "r"
2290 LET color_int = 2
2300 IF color == "o"
2310 LET color_int = 8
2320 IF color == "y"
2330 LET color_int = 7
2340 IF color == "g"
2350 LET color_int = 5
2360 IF color == "b"
2370 LET color_int = 6
2380 IF color == "p"
2390 LET color_int = 4
2400 RETURN

2450 REM check_guess
2455 DIM temp_code 4
2456 LET temp_code[0] = code[0]
2457 LET temp_code[1] = code[1]
2458 LET temp_code[2] = code[2]
2459 LET temp_code[3] = code[3]
2460 LET correct = 0
2461 LET correct_pos = 0
2465 LET i = 1
2466 IF color[i] == temp_code[i - 1]
2467 THEN
2468 LET correct_pos = correct_pos + 1
2469 LET temp_code[i - 1] = 0
2470 LET color[i] = neg(1)
2471 ENDIF
2472 LET i = i + 1
2473 IF i < 5
2474 GOTO 2466
2475 LET i = 1
2476 IF color[i] == temp_code[0]
2477 THEN
2478 LET correct = correct + 1
2479 LET temp_code[0] = 0
2480 LET color[i] = neg(1)
2481 ENDIF
2482 IF color[i] == temp_code[1]
2483 THEN
2484 LET correct = correct + 1
2485 LET temp_code[1] = 0
2486 LET color[i] = neg(1)
2487 ENDIF
2488 IF color[i] == temp_code[2]
2489 THEN
2490 LET correct = correct + 1
2491 LET temp_code[2] = 0
2492 LET color[i] = neg(1)
2493 ENDIF
2494 IF color[i] == temp_code[3]
2495 THEN
2496 LET correct = correct + 1
2497 LET temp_code[3] = 0
2498 LET color[i] = neg(1)
2499 ENDIF
2500 LET i = i + 1
2501 IF i < 5
2502 GOTO 2476
2505 IF correct_pos == 4
2506 GOSUB game_won
2507 RETURN









2900 REM draw_correct
2910 REM ARGS: x, y, colored
2920 IF colored == 1
2930 POKE (x + (y * 80)), 5
2940 ELSE
2950 IF colored == 0
2960 POKE (x + (y * 80)), 1
2970 ELSE
2980 IF colored == neg_1
2990 POKE (x + (y * 80)), 15
2995 RETURN

3000 REM game_won
3010 PRINT "You won!"
3020 PRINT "You guessed the code in: " 
3030 PRINT tries + " tries!"
3040 CLS
3050 GOTO last


3150 REM valid_color
3151 REM ARGS: valid
3152 REM RETURNS: valid
3153 IF valid == "r"
3154 LET valid = 1
3155 ELSE
3156 IF valid == "o"
3157 LET valid = 1
3158 ELSE
3159 IF valid == "y"
3160 LET valid = 1
3161 ELSE
3162 IF valid == "g"
3163 LET valid = 1
3164 ELSE
3165 IF valid == "b"
3166 LET valid = 1
3167 ELSE
3168 IF valid == "p"
3169 LET valid = 1
3170 ELSE
3171 LET valid = 0
3172 RETURN

3200 REM game_lost
3210 PRINT "You lost!"
3220 LET x = 63
3230 LET y = (11 * 4)
3240 LET i = 0
3250 LET color = code[i / 4]
3260 GOSUB color_to_int
3270 LET color = color_int
3280 GOSUB draw_peg
3290 LET i = i + 4
3300 LET x = (63 + i)
3305 LET y = (11 * 4)
3310 IF i < 16
3320 GOTO 3250
3330 RETURN




7000 REM END OF PROGRAM
